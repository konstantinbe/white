
task :specs do
  run "rspec specs/*.rb"
end

# ---------------------------------------------------------------- functions ---

def assert(condition, message = "")
  unless condition
    puts message + "\n\n"
    exit 1
  end
end

def check(condition)
  unless condition
    puts FAILED
    exit 1
  end
end

def run(command)
  success = system command
  check success
end

def delete_file_if_exists(path)
  run "rm -rf #{path}" if File.exists? path
end

def put(string)
  print string
  STDOUT.flush
end

def render_erb_template_to_file(template_path, binding, file_path)
  template = File.open(template_path, "r") { |file| ERB.new(file.read) }
  cache_xml = template.result binding
  File.open(file_path, "w") { |file| file.write(cache_xml) }
end

# ---------------------------------------------------------------- constants ---

REPO = `git config remote.origin.url`.chomp
NAME = REPO.scan(/\/(.*)\.git/).first.first.to_s
WIKI = REPO.gsub ".git", ".wiki.git"
LOGIN = `git config github.user`.chomp
TOKEN = `git config github.token`.chomp
OK = "\33[0m\33[32mOK\33[0m"
FAILED = "\33[0m\33[31mFAILED\33[0m"
RELEASE = File.open("README.md", "r") { |file| file.read }.scan(/^### (\d(?:\.\d+)+)\s/).first.to_s
